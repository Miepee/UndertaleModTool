<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scol="clr-namespace:System.Collections;assembly=System.Runtime"
        xmlns:local="clr-namespace:UndertaleModToolAvalonia"
        xmlns:undertale="clr-namespace:UndertaleModLib.Models;assembly=UndertaleModLib"
        xmlns:undertalelib="clr-namespace:UndertaleModLib;assembly=UndertaleModLib"
        xmlns:cmod="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        x:Class="UndertaleModToolAvalonia.MainWindow"
        Closing="DataWindow_Closing"
        mc:Ignorable="d"
        Height="450" Width="800"
        >
        <Window.Title>
                <MultiBinding StringFormat="{}{0} - {1} [{2}]">
                        <Binding Path="TitleMain"/>
                        <Binding Path="Data.GeneralInfo" FallbackValue="No game loaded"/>
                        <Binding Path="FilePath"/>
                </MultiBinding>
        </Window.Title>
        <Window.Resources>
                <local:ImplementsInterfaceConverter x:Key="ImplementsInterfaceConverter"/>
                <local:FilteredViewConverter x:Key="FilteredViewConverter" Filter="{Binding Text, Source={x:Reference SearchBox}, RelativeSource=PropertyChanged}"/>
                <local:NullToVisibilityConverter x:Key="VisibleIfNotNull"  nullValue="false" notNullValue="true"/>
        </Window.Resources>
        <Window.KeyBindings>
                <KeyBinding <!--Modifiers="Control"--> Gesture="N" Command="{Binding New}"/>
                <KeyBinding <!--Modifiers="Control"--> Gesture="O" Command="{Binding Open}"/>
                <KeyBinding <!--Modifiers="Control"--> Gesture="S" Command="{Binding Save}"/>
                <KeyBinding <!--Modifiers="Control"--> Gesture="W" Command="{Binding Close}"/>
                <KeyBinding <!--Modifiers="Control"--> Gesture="C" Command="{Binding Copy}"/>
                <KeyBinding <!--Modifiers="Control"--> Gesture="P" Command="{Binding Paste}"/>
                <KeyBinding Gesture="F5" Command="{Binding Print}"/>
                <KeyBinding <!--Modifiers="Alt"--> Gesture="F5" Command="{Binding CancelPrint}"/>
                <KeyBinding <!--Modifiers="Shift"--> Gesture="F5" Command="{Binding PrintPreview}"/>
        </Window.KeyBindings>
        <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_New" Command="{Binding New}" InputGesture="Ctrl+N"/>
                    <MenuItem Header="_Open" Command="{Binding Open}" InputGesture="Ctrl+O"/>
                    <MenuItem Header="_Save" Command="{Binding Save}" InputGesture="Ctrl+S">
                        <MenuItem.Styles>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="IsEnabled" Value="{Binding CanSave}"/>
                            </Style>
                        </MenuItem.Styles>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="_Temp run game" Command="{Binding Print}" InputGesture="F5">
                        <!-- TODO: I think I need a custom command for that... -->
                        <MenuItem.Styles>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="IsEnabled" Value="{Binding CanSave}"/>
                            </Style>
                        </MenuItem.Styles>
                    </MenuItem>
                    <MenuItem Header="Run game under _debugger" Command="{Binding PrintPreview}" InputGesture="Shift+F5">
                        <MenuItem.Styles>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="IsEnabled" Value="{Binding CanSave}"/>
                            </Style>
                        </MenuItem.Styles>
                    </MenuItem>
                    <MenuItem Header="Run game with other runner" Command="{Binding CancelPrint}" InputGesture="Alt+F5">
                        <MenuItem.Styles>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="IsEnabled" Value="{Binding CanSave}"/>
                            </Style>
                        </MenuItem.Styles>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Generate o_ffset map" Click="MenuItem_OffsetMap_Click"/>
                    <Separator/>
                    <MenuItem Header="S_ettings" Command="{Binding Properties}"/>
                    <MenuItem Header="_Close" Command="{Binding Close}" InputGesture="Ctrl+W"/>
                </MenuItem>
                <MenuItem Header="_Scripts">
                    <MenuItem Header="_Run builtin script" SubmenuOpened="MenuItem_RunBuiltinScript_SubmenuOpened">
                        <MenuItem Header="(...loading...)" IsEnabled="False"/>
                    </MenuItem>
                    <MenuItem Header="_Run community script" SubmenuOpened="MenuItem_RunCommunityScript_SubmenuOpened">
                        <MenuItem Header="(...loading...)" IsEnabled="False"/>
                    </MenuItem>
                    <MenuItem Header="_Unpack assets" SubmenuOpened="MenuItem_RunUnpackScript_SubmenuOpened">
                        <MenuItem Header="(...loading...)" IsEnabled="False"/>
                    </MenuItem>
                    <MenuItem Header="_Repack assets" SubmenuOpened="MenuItem_RunRepackScript_SubmenuOpened">
                        <MenuItem Header="(...loading...)" IsEnabled="False"/>
                    </MenuItem>
                    <MenuItem Header="_Run technical script" SubmenuOpened="MenuItem_RunTechnicalScript_SubmenuOpened">
                        <MenuItem Header="(...loading...)" IsEnabled="False"/>
                    </MenuItem>
                    <MenuItem Header="_Run demo script" SubmenuOpened="MenuItem_RunDemoScript_SubmenuOpened">
                        <MenuItem Header="(...loading...)" IsEnabled="False"/>
                    </MenuItem>
                    <MenuItem Header="Run _other script..." Click="MenuItem_RunOtherScript_Click"/>
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Header="_GitHub" Click="MenuItem_GitHub_Click"/>
                    <MenuItem Header="_About" Click="MenuItem_About_Click"/>
                </MenuItem>
            </Menu>
            <Grid DockPanel.Dock="Bottom">
                <TextBox x:Name="CommandBox" AcceptsReturn="True" KeyDown="CommandBox_PreviewKeyDown" Margin="0,0,35,0"/>
                <Label Content="None" HorizontalAlignment="Right" VerticalAlignment="Top" VerticalContentAlignment="Top" Name="ObjectLabel"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Grid.Row="0" Margin="5,5,5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" ToolTip.Tip="Back" Margin="0,0,5,0" Name="BackButton" Click="BackButton_Click">
                        <Button.Styles>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTriggerBehavior Binding="{Binding CurrentTab.SelectionHistory.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTriggerBehavior>
                                </Style.Triggers>
                            </Style>
                        </Button.Styles>
                        <Image Name="BackButtonImage">
                            <Image.Styles>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Source" Value="/Resources/arrow_blue.png" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="/Resources/arrow_red.png" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Styles>
                        </Image>
                    </Button>
                    <TextBox Grid.Column="1" Name="SearchBox" ToolTip.Tip="Search" TextChanged="SearchBox_TextChanged"/>
                </Grid>
                <TreeView Grid.Column="0" Grid.Row="1" Margin="5" DataContext="{Binding Data}" SelectionChanged="TreeView_SelectedItemChanged" MouseDoubleClick="MainTree_MouseDoubleClick" KeyUp="MainTree_KeyUp" AllowDrop="True" Name="MainTree" KeyDown="MainTree_KeyDown" PreviewMouseRightButtonDown="MainTree_PreviewMouseRightButtonDown">
                    <!--
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling">
                    -->
                    <TreeView.Resources>
                        <ContextMenu x:Key="AddMenu">
                            <MenuItem Header="Add" Click="MenuItem_Add_Click"/>
                        </ContextMenu>
                        <ContextMenu x:Key="UndertaleResourceMenu">
                            <MenuItem Header="Copy name to clipboard" Click="MenuItem_CopyName_Click"/>
                            <MenuItem Header="Delete" Click="MenuItem_Delete_Click"/>
                        </ContextMenu>

                        <SolidColorBrush x:Key="{x:Static   SystemColors.InactiveSelectionHighlightBrushKey}" Color="#D4D4D4"/>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <EventSetter Event="TreeViewItem.DragOver" Handler="TreeView_DragOver"/>
                            <EventSetter Event="TreeViewItem.Drop" Handler="TreeView_Drop"/>
                            <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeView_MouseMove"/>
                            <Style.Triggers>
                                <DataTriggerBehavior Binding="{Binding ., Converter={StaticResource ImplementsInterfaceConverter}, ConverterParameter={x:Type undertalelib:UndertaleResource}}" Value="True">
                                    <Setter Property="ContextMenu" Value="{StaticResource UndertaleResourceMenu}"/>
                                </DataTriggerBehavior>
                                <DataTriggerBehavior Binding="{Binding Items, RelativeSource={RelativeSource Self}, Converter={StaticResource ImplementsInterfaceConverter}, ConverterParameter={x:Type scol:IList}}" Value="True">
                                    <Setter Property="ContextMenu" Value="{StaticResource AddMenu}"/>
                                </DataTriggerBehavior>
                                <DataTriggerBehavior Binding="{Binding Items, RelativeSource={RelativeSource Self}, Converter={StaticResource ImplementsInterfaceConverter}, ConverterParameter={x:Type cmod:ICollectionView}}" Value="True">
                                    <Setter Property="ContextMenu" Value="{StaticResource AddMenu}"/>
                                </DataTriggerBehavior>
                            </Style.Triggers>
                        </Style>
                    </TreeView.Resources>
                    <TreeViewItem Header="Data" IsExpanded="True">
                        <TreeViewItem Header="General info" IsVisible="{Binding GeneralInfo, Converter={StaticResource VisibleIfNotNull}}"/>
                        <TreeViewItem Header="Global init" IsVisible="{Binding GlobalInitScripts, Converter={StaticResource VisibleIfNotNull}}"/>
                        <TreeViewItem Header="Game End scripts" IsVisible="{Binding GameEndScripts, Converter={StaticResource VisibleIfNotNull}}"/>
                        <TreeViewItem Header="Audio groups" Items="{Binding AudioGroups, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding AudioGroups, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleAudioGroup}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Sounds" Items="{Binding Sounds, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Sounds, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleSound}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Sprites" Items="{Binding Sprites, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Sprites, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleSprite}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Backgrounds &amp; Tile sets" Items="{Binding Backgrounds, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Backgrounds, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleBackground}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Paths" Items="{Binding Paths, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Paths, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertalePath}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Scripts" Items="{Binding Scripts, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Scripts, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleScript}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Shaders" Items="{Binding Shaders, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Shaders, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleShader}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Fonts" Items="{Binding Fonts, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Fonts, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleFont}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Timelines" Items="{Binding Timelines, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Timelines, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleTimeline}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Game objects" Items="{Binding GameObjects, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding GameObjects, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleGameObject}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Rooms" Items="{Binding Rooms, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Rooms, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleRoom}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Extensions" Items="{Binding Extensions, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Extensions, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleExtension}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Texture page items" Items="{Binding TexturePageItems, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding TexturePageItems, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleTexturePageItem}">
                                    <TextBlock Text="{Binding .}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Name="CodeItemsList" Header="Code" Items="{Binding Code, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Code, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="ContextMenu" Value="{StaticResource UndertaleResourceMenu}"/>
                                    <Setter Property="Foreground" Value="Gray"/>
                                    <Style.Triggers>
                                        <DataTriggerBehavior Binding="{Binding Path=ParentEntry}" Value="{x:Null}">
                                            <Setter Property="Foreground" Value="Black"/>
                                        </DataTriggerBehavior>
                                    </Style.Triggers>
                                </Style>
                            </TreeViewItem.ItemContainerStyle>
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleCode}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Variables" Items="{Binding Variables, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Variables, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleVariable}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Functions" Items="{Binding Functions, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Functions, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleFunction}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Code locals" Items="{Binding CodeLocals, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding CodeLocals, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleCodeLocals}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Strings" Items="{Binding Strings, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding Strings, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleString}">
                                    <TextBlock Text="{Binding Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Embedded textures" Items="{Binding EmbeddedTextures, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding EmbeddedTextures, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleEmbeddedTexture}">
                                    <TextBlock Text="{Binding .}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Embedded audio" Items="{Binding EmbeddedAudio, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding EmbeddedAudio, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleEmbeddedAudio}">
                                    <TextBlock Text="{Binding .}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Texture group information" Items="{Binding TextureGroupInfo, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding TextureGroupInfo, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleTextureGroupInfo}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <TreeViewItem Header="Embedded images" Items="{Binding EmbeddedImages, Converter={StaticResource FilteredViewConverter}}" IsVisible="{Binding EmbeddedImages, Converter={StaticResource VisibleIfNotNull}}">
                            <TreeViewItem.ItemTemplate>
                                <TreeDataTemplate DataType="{x:Type undertale:UndertaleEmbeddedImage}">
                                    <TextBlock Text="{Binding Name.Content}" />
                                </TreeDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                    </TreeViewItem>
                </TreeView>

                <GridSplitter Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="True" Width="3"/>
                <ScrollViewer Name="TabScrollViewer" Grid.Column="2" Grid.RowSpan="1" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Hidden" PreviewMouseWheel="TabScrollViewer_PreviewMouseWheel">
                    <TabControl Name="TabController" SelectionChanged="TabController_SelectionChanged" TabStripPlacement="Top"/>
                </ScrollViewer>
                <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="2" Grid.Row="2">
                    <ContentControl Margin="10" Content="{Binding CurrentTab.Selected,Mode=OneWay}" Name="DataEditor">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type local:DescriptionView}">
                                <StackPanel>
                                    <TextBlock Text="{Binding Heading,Mode=OneWay}" FontWeight="Bold"/>
                                    <Separator/>
                                    <TextBlock Text="{Binding Description,Mode=OneWay}"/>
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type local:GeneralInfoEditor}">
                                <local:UndertaleGeneralInfoEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type local:GlobalInitEditor}">
                                <local:UndertaleGlobalInitEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type local:GameEndEditor}">
                                <local:UndertaleGameEndEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleAudioGroup}">
                                <local:UndertaleAudioGroupEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleSound}">
                                <local:UndertaleSoundEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleBackground}">
                                <local:UndertaleBackgroundEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleEmbeddedTexture}">
                                <local:UndertaleEmbeddedTextureEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleEmbeddedAudio}">
                                <local:UndertaleEmbeddedAudioEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleTexturePageItem}">
                                <local:UndertaleTexturePageItemEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleEmbeddedImage}">
                                <local:UndertaleEmbeddedImageEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleTextureGroupInfo}">
                                <local:UndertaleTextureGroupInfoEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleSprite}">
                                <local:UndertaleSpriteEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleScript}">
                                <local:UndertaleScriptEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleShader}">
                                <local:UndertaleShaderEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertalePath}">
                                <local:UndertalePathEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleFont}">
                                <local:UndertaleFontEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleTimeline}">
                                <local:UndertaleTimelineEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleGameObject}">
                                <local:UndertaleGameObjectEditor/>
                            </DataTemplate>

                            <DataTemplate x:Key="roomRendererTemplate">
                                <local:UndertaleRoomRenderer/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type undertale:UndertaleRoom}">
                                <local:UndertaleRoomEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleExtension}">
                                <local:UndertaleExtensionEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleExtensionFile}">
                                <local:UndertaleExtensionFileEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleExtensionFunction}">
                                <local:UndertaleExtensionFunctionEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleCode}">
                                <local:UndertaleCodeEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleString}">
                                <local:UndertaleStringEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleVariable}">
                                <local:UndertaleVariableEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleFunction}">
                                <local:UndertaleFunctionEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertale:UndertaleCodeLocals}">
                                <local:UndertaleCodeLocalsEditor/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type undertalelib:UndertaleChunkVARI}">
                                <local:UndertaleVariableChunkEditor/>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </ScrollViewer>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
